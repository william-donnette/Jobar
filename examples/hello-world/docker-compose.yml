services:
    postgresql:
        image: postgres:${POSTGRESQL_VERSION}
        container_name: temporal-postgresql
        environment:
            POSTGRES_PASSWORD: temporal
            POSTGRES_USER: temporal
        networks:
            - temporal-network
        volumes:
            - /var/lib/postgresql/data
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U temporal']
            interval: 5s
            timeout: 5s
            retries: 5
    temporal:
        container_name: temporal
        depends_on:
            postgresql:
                condition: service_healthy
        environment:
            - DB=postgres12
            - DB_PORT=5432
            - POSTGRES_USER=temporal
            - POSTGRES_PWD=temporal
            - POSTGRES_SEEDS=postgresql
        image: temporalio/auto-setup:${TEMPORAL_VERSION}
        networks:
            - temporal-network
        ports:
            - ${TEMPORAL_PORT}:${TEMPORAL_PORT}
        healthcheck:
            test: ['CMD-SHELL', 'temporal operator cluster health --address $(hostname -i):${TEMPORAL_PORT}']
            interval: 30s
            timeout: 10s
            retries: 5
    temporal-admin-tools:
        image: temporalio/admin-tools:${TEMPORAL_ADMINTOOLS_VERSION}
        container_name: temporal-admin-tools
        depends_on:
            temporal:
                condition: service_healthy
        environment:
            - TEMPORAL_ADDRESS=temporal:${TEMPORAL_PORT}
            - TEMPORAL_CLI_ADDRESS=temporal:${TEMPORAL_PORT}
        networks:
            - temporal-network
        stdin_open: true
        tty: true
    temporal-ui:
        image: temporalio/ui:${TEMPORAL_UI_VERSION}
        container_name: temporal-ui
        depends_on:
            - temporal
        environment:
            - TEMPORAL_ADDRESS=temporal:${TEMPORAL_PORT}
            - TEMPORAL_CORS_ORIGINS=http://localhost:3002
            - TEMPORAL_NOTIFY_ON_NEW_VERSION=true
        networks:
            - temporal-network
        ports:
            - 8082:8080
    jobar:
        container_name: jobar
        depends_on:
            temporal:
                condition: service_healthy
        build:
            target: prod
        networks:
            - temporal-network
        ports:
            - 3333:3002
networks:
    temporal-network:
        driver: bridge
        name: temporal-network
